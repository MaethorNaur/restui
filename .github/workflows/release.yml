name: Release

on:
  push:
    tags: ['v*']
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get release version
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Login to GitHub Packages Docker Registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Restore coursier cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/coursier/v1
        key: ${{ runner.os }}-coursier-${{ hashFiles('**/build.sbt') }}-${{ hashFiles('project/Dependencies.scala') }}
        restore-keys: ${{ runner.os }}-coursier-
    - name: Restore m2 cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/build.sbt') }}-${{ hashFiles('project/Dependencies.scala') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Restore node cache
      uses: actions/cache@v2
      with:
        path: rest-ui/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('rest-ui/package.*') }}
        restore-keys: ${{ runner.os }}-node-
    - name: Restore conventional changelog cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-conventional-changelog
        restore-keys: ${{ runner.os }}-conventional-changelog
    - name: install conventional changelog
      env:
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      run: |
        npm install conventional-changelog-cli
        node_modules/.bin/conventional-changelog  -r 2 -p angular | tail -n +5 > release.md
        echo "\`docker pull unisonui/unisonui:${RELEASE_VERSION}\`" >> release.md
    - name: build
      run: sbt "project unison-ui; npmInstall; webpackProdTask; dockerBuildAndPush"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: release.md
        draft: false
        prerelease: false
